{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1. Nothing done yet\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_g4rxdNVK1J_0.py"}}{\fldrslt http://www.codeskulptor.org/#user34_g4rxdNVK1J_0.py}}\
2. Commented out the last line of the template that makes use of the GUI\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_0.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_0.py}}\
\
Phase 1\
3. Merge function development\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_DQyfHD0ZD6_0.py"}}{\fldrslt http://www.codeskulptor.org/#user34_DQyfHD0ZD6_0.py}}\
slide(line) and merged(implemented)\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_DQyfHD0ZD6_1.py"}}{\fldrslt http://www.codeskulptor.org/#user34_DQyfHD0ZD6_1.py}}\
working version of merge(line)\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_DQyfHD0ZD6_2.py"}}{\fldrslt http://www.codeskulptor.org/#user34_DQyfHD0ZD6_2.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_DQyfHD0ZD6_3.py"}}{\fldrslt http://www.codeskulptor.org/#user34_DQyfHD0ZD6_3.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_DQyfHD0ZD6_4.py"}}{\fldrslt http://www.codeskulptor.org/#user34_DQyfHD0ZD6_4.py}}\
\
Phase 2\
4. placed the working merge(line) function in the actual template\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_1.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_1.py}}\
5.implemented the init method()\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_2.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_2.py}}\
6. implemented the reset method\'85does it work?\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_3.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_3.py}}\
7. implemented get_width() and get_height() methods\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_4.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_4.py}}\
8. implemented get_tile()\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_5.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_5.py}}\
9. implemented set_tile() and my test code\'85does set_tile() work?\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_6.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_6.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_7.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_7.py}}\
\
Phase 3\
10. implemented new_tile() method\'85.does it work?\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_8.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_8.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_9.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_9.py}}\
11. implemented UP, DOWN, LEFT, RIGHT in the init() method\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_10.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_10.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_11.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_11.py}}\
12. move method implementation\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_12.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_12.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_13.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_13.py}}\
13. made changes to new_tile,(), set_tile, get_tile() in terms of changing\
(row-1) to row and (col-1) to col\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_14.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_14.py}}\
14. made some corrections from the owl test feedback\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_19.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_19.py}}\
15. cleaned up some comments, renamed variables\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_20.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_20.py}}\
16. changed the range in new_tile() function from random.randint(0, self,_height-1) to random.randint(1, self._height)\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_21.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_21.py}}\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_22.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_22.py}}\
17.made some changes in the move() method\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_23.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_23.py}}\
18. some testing code\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_24.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_24.py}}\
19. A working version in my computer but not on the owl test\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_27.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_27.py}}\
20. index modified version\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_5ANKjnbq22_28.py"}}{\fldrslt http://www.codeskulptor.org/#user34_5ANKjnbq22_28.py}}\
21. modified the while loop in the new_file() method\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_ngnkgjzKog_1.py"}}{\fldrslt http://www.codeskulptor.org/#user34_ngnkgjzKog_1.py}}\
22. A working version\'85finally! Thank God\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_ngnkgjzKog_3.py"}}{\fldrslt http://www.codeskulptor.org/#user34_ngnkgjzKog_3.py}}\
23 The Final Version\
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user34_ngnkgjzKog_4.py"}}{\fldrslt http://www.codeskulptor.org/#user34_ngnkgjzKog_4.py}}\
\
\
====================================================================\
\
"""\
Clone of 2048 game.\
"""\
\
import poc_2048_gui\
import random\
\
# Directions, DO NOT MODIFY\
UP = 1\
DOWN = 2\
LEFT = 3\
RIGHT = 4\
\
# Offsets for computing tile indices in each direction.\
# DO NOT MODIFY this dictionary.    \
OFFSETS = \{UP: (1, 0), \
           DOWN: (-1, 0), \
           LEFT: (0, 1), \
           RIGHT: (0, -1)\} \
   \
def slide(line):\
    """Slide the values in the line list to the left/forward\
    such that no 0 appears in between non-zero values\
    and return the result list\
    """\
    result = [0] * len(line)\
    for current in line:\
        if (current != 0):\
            for idx in range(len(result)):\
                value = result[idx]\
                if (value == 0):\
                    result[idx] = current\
                    break\
    return result\
\
def merged(line):\
    """\
    Merge the values in the line list and return it\
    """\
    for idx in range(len(line)-1):\
        if (line[idx] == line[idx+1]):\
            line[idx] += line[idx+1]\
            line[idx+1] = 0\
    return line\
\
def merge(line):\
    """\
    Helper function that merges a single row or column in 2048\
    """\
    slided= slide(line)\
    all_merged = merged(slided)\
    result= slide(all_merged)\
    return result\
\
class TwentyFortyEight:\
    """\
    Class to run the game logic.\
    """\
\
    def __init__(self, grid_height, grid_width):\
        self._height = grid_height\
        self._width = grid_width\
        self.reset()\
        #stuff for the move method\
        up_list = [(0, col) for col in range(self._width)]\
        down_list = [(self._height-1, col) for col in range(self._width)]\
        left_list = [(row, 0) for row in range(self._height)]\
        right_list = [(row, self._width-1) for row in range(self._height)]\
        self._move_dict = \{UP:up_list, DOWN:down_list, LEFT:left_list, RIGHT:right_list\}\
    \
    def reset(self):\
        """\
        Reset the game so the grid is empty.\
        """\
        self._grid = [[0 for dummy2 in range(self._width)] for dummy1 in range(self._height)]\
    \
    def __str__(self):\
        """\
        Return a string representation of the grid for debugging.\
        """\
        return str(self._grid)\
\
    def get_grid_height(self):\
        """\
        Get the height of the board.\
        """\
        return self._height\
    \
    def get_grid_width(self):\
        """\
        Get the width of the board.\
        """\
        return self._width\
                            \
    def move(self, direction):\
        """\
        Move all tiles in the given direction and add\
        a new tile if any tiles moved.\
        """\
        direction_tiles = self._move_dict[direction]\
        #print direction_tiles\
        offset = list(OFFSETS[direction])\
        \
        times = 0\
        if (direction == 1 or direction == 2):\
            times = self._height\
        elif (direction == 3 or direction == 4):\
            times = self._width\
        \
        for current_tile in direction_tiles:\
            tile = list(current_tile)\
            temp_list = []\
            temp_list.append(self.get_tile(tile[0], tile[1]))\
            for dummy in range(times-1):\
                tile[0] += offset[0]\
                tile[1] += offset[1]\
                temp_list.append(self.get_tile(tile[0], tile[1]))\
            result = merge(temp_list)\
            tile = list(current_tile)\
            self.set_tile(tile[0], tile[1], result[0])\
            for idx in range(1, times):\
                tile[0] += offset[0]\
                tile[1] += offset[1]\
                self.set_tile(tile[0], tile[1], result[idx])\
  \
        self.new_tile()\
        \
    def new_tile(self):\
        """\
        Create a new tile in a randomly selected empty \
        square.  The tile should be 2 90% of the time and\
        4 10% of the time.\
        """\
        #randomly select an empty square\
        selected = False\
        count = self._width * self._height\
        while (selected != True and count != 0):\
            row = random.randint(0, self._height-1)\
            col = random.randint(0, self._width-1)\
            if self.get_tile(row, col) == 0:\
                selected = True\
            if (selected == True):\
                probable_value = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4]\
                tile = random.choice(probable_value)\
                self.set_tile(row, col, tile)\
            count -= 1\
        \
    def set_tile(self, row, col, value):\
        """\
        Set the tile at position row, col to have the given value.\
        """        \
        self._grid[row][col] = value\
        \
    def get_tile(self, row, col):\
        """\
        Return the value of the tile at position row, col.\
        """ \
        #print row, col\
        return self._grid[row][col]\
 \
#my testing\
#game = TwentyFortyEight(4,4)\
#game.set_tile(0,0,2)\
#game.set_tile(1,1,2)\
#game.set_tile(2,2,2)\
#game.set_tile(3,3,2)\
#print game\
#game.move(UP)\
#print game\
\
#print x\
#print x.get_grid_height()\
#print x.get_grid_width()\
#print x.get_tile(4,4)\
#print x.set_tile(4,4,10)\
#print x\
#x.new_tile()\
#print x\
\
#poc_2048_gui.run_gui(TwentyFortyEight(4, 4))\
 \
}